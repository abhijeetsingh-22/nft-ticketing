generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id                  String    @id @default(cuid())
  name                String
  slug                String    @unique
  description         String
  startDate           DateTime
  entryDate           DateTime?
  endDate             DateTime
  venueName           String
  state               String?
  liveStatus          Boolean?
  publicVisibility    Boolean?
  endedStatus         Boolean?
  coverPhoto          String
  thumbnail           String
  organizerId         String
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  numberOfTickets     Int?
  ticketPrice         Float?
  mintAddress         String?
  nftSymbol           String?
  numberOfTicketsSold Int       @default(0)
  projectId           String?
  organizer           User      @relation(fields: [organizerId], references: [id])
  tickets             Ticket[]

  @@map("events")
}

model Ticket {
  id        String       @id @default(cuid())
  tokenId   String       @unique
  ownerId   String
  eventId   String
  price     Float
  status    TicketStatus
  createdAt DateTime     @default(now())
  updatedAt DateTime
  userId    String?
  event     Event        @relation(fields: [eventId], references: [id])
  user      User?        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("tickets")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  walletAddress String?   @unique
  salt          String?
  password      String?
  emailVerified DateTime?
  image         String?
  isOnboarded   Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  events        Event[]
  tickets       Ticket[]

  @@map("users")
}

enum TicketStatus {
  AVAILABLE
  SOLD
  TRANSFERRED
  REDEEMED
}
